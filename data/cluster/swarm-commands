
#Creating network

docker network create \
  --driver overlay \
  my-network


docker service create \
--name portainer \
--publish 9000:9000 \
--constraint 'node.role == manager' \
--mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock \
  portainer/portainer \
-H unix:///var/run/docker.sock

docker node update --label-add cassandra2=true cassandra2
docker node update --label-add cassandra1=true cassandra1

 docker swarm join-token worker

#Creating cassandra

mkdir /cassandra-data

docker service create \
  --name cassandra_1 \
  --replicas=1 \
  --network my-network \
  --publish 9042:9042 \
  --env CASSANDRA_BROADCAST_ADDRESS=cassandra_1 \
  --mount type=bind,source=/cassandra-data,destination=/var/lib/cassandra \
  --constraint 'node.labels.cassandra1 == true' \
  cassandra:3.11

docker service create \
  --name cassandra_2 \
  --replicas=1 \
  --network my-network \
  --publish 9043:9042 \
  --env CASSANDRA_BROADCAST_ADDRESS=cassandra_2 \
  --CASSANDRA_SEEDS=cassandra_1 \
  --mount type=bind,source=/cassandra-data,destination=/var/lib/cassandra \
  --constraint 'node.labels.cassandra2 == true' \
  cassandra:3.11

docker config create redisconf redis.conf
docker service  create  \
    --name redis \
    --publish 6379:6379 \
    --network my-network \
    --config redisconf \
     redis:3.2.0 redis-server /redisconf

sysctl -w vm.max_map_count=262144

chmod -R 777 /es-data/


docker service create --name elastic_2 \
  --network my-network \
  --constraint 'node.labels.elastic2 == true' \
  -p 9202:9200 \
  -p 9302:9301 \
  --env cluster.name=test-cluster \
  --env "discovery.zen.ping.unicast.hosts=elastic_1" \
  --mount type=bind,source=/es-data,destination=/usr/share/elasticsearch/data \
  docker.elastic.co/elasticsearch/elasticsearch:5.5.2

docker service create --name elastic_1 \
  --network my-network \
  --constraint 'node.labels.elastic1 == true' \
  -p 9201:9200 \
  -p 9301:9301 \
  --env cluster.name=test-cluster \
  --env "discovery.zen.ping.unicast.hosts=elastic_2" \
  --mount type=bind,source=/es-data,destination=/usr/share/elasticsearch/data \
  docker.elastic.co/elasticsearch/elasticsearch:5.5.2

docker service create --name elastic_access \
  --network my-network \
  --constraint 'node.labels.worker == true' \
  -p 9203:9200 \
  -p 9303:9301 \
  --env cluster.name=test-cluster \
  --env "discovery.zen.ping.unicast.hosts=elastic_2,elastic_1" \
  --env "node.data=false" \
  docker.elastic.co/elasticsearch/elasticsearch:5.5.2

docker service create --name kibana \
  --network my-network \
  --constraint 'node.labels.worker == true' \
  --env ELASTICSEARCH_URL=http://elastic_access:9200 \
  --env ELASTICSEARCH_USERNAME=elastic \
  --env ELASTICSEARCH_PASSWORD=changeme \
  -p 5601:5601 \
docker.elastic.co/kibana/kibana:5.5.2


http://ip:5601/app/kibana#/dev_tools/console?load_from=https:%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fsnippets%2Findices-create-index%2F1.json&_g=()











